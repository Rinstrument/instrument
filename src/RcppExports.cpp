// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// abs2
double abs2(double x);
RcppExport SEXP _hlt_abs2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(abs2(x));
    return rcpp_result_gen;
END_RCPP
}
// lgp1PNR
double lgp1PNR(IntegerMatrix& x, NumericVector lambda, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, double eps);
RcppExport SEXP _hlt_lgp1PNR(SEXP xSEXP, SEXP lambdaSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp1PNR(x, lambda, nT, n, J, tJ, nDmax, lJ, theta, d, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt1PNR
double lt1PNR(IntegerMatrix& x, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt1PNR(SEXP xSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt1PNR(x, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// lgp1PNR2D
double lgp1PNR2D(IntegerMatrix& x, NumericVector lambda, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, double eps);
RcppExport SEXP _hlt_lgp1PNR2D(SEXP xSEXP, SEXP lambdaSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp1PNR2D(x, lambda, nT, n, J, tJ, nDmax, lJ, theta, d, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt1PNR2D
double lt1PNR2D(IntegerMatrix& x, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt1PNR2D(SEXP xSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt1PNR2D(x, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// lgp1PR
double lgp1PR(IntegerMatrix& x, NumericMatrix& z, NumericVector lambda, int nB, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, NumericVector beta, double eps);
RcppExport SEXP _hlt_lgp1PR(SEXP xSEXP, SEXP zSEXP, SEXP lambdaSEXP, SEXP nBSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP betaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp1PR(x, z, lambda, nB, nT, n, J, tJ, nDmax, lJ, theta, d, beta, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt1PR
double lt1PR(IntegerMatrix& x, NumericMatrix& z, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int nB, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt1PR(SEXP xSEXP, SEXP zSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP nBSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt1PR(x, z, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, nB, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// lgp1PR2D
double lgp1PR2D(IntegerMatrix& x, NumericMatrix& z, NumericVector lambda, int nB, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, NumericVector beta, double eps);
RcppExport SEXP _hlt_lgp1PR2D(SEXP xSEXP, SEXP zSEXP, SEXP lambdaSEXP, SEXP nBSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP betaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp1PR2D(x, z, lambda, nB, nT, n, J, tJ, nDmax, lJ, theta, d, beta, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt1PR2D
double lt1PR2D(IntegerMatrix& x, NumericMatrix& z, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int nB, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt1PR2D(SEXP xSEXP, SEXP zSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP nBSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt1PR2D(x, z, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, nB, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// lgp2PNR
double lgp2PNR(IntegerMatrix& x, NumericVector lambda, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, NumericVector a, double eps);
RcppExport SEXP _hlt_lgp2PNR(SEXP xSEXP, SEXP lambdaSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP aSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp2PNR(x, lambda, nT, n, J, tJ, nDmax, lJ, theta, d, a, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt2PNR
double lt2PNR(IntegerMatrix& x, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt2PNR(SEXP xSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt2PNR(x, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// lgp2PNR2D
double lgp2PNR2D(IntegerMatrix& x, NumericVector lambda, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, NumericVector a, double eps);
RcppExport SEXP _hlt_lgp2PNR2D(SEXP xSEXP, SEXP lambdaSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP aSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp2PNR2D(x, lambda, nT, n, J, tJ, nDmax, lJ, theta, d, a, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt2PNR2D
double lt2PNR2D(IntegerMatrix& x, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt2PNR2D(SEXP xSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt2PNR2D(x, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// lgp2PR
double lgp2PR(IntegerMatrix& x, NumericMatrix& z, NumericVector lambda, int nB, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, NumericVector a, NumericVector beta, double eps);
RcppExport SEXP _hlt_lgp2PR(SEXP xSEXP, SEXP zSEXP, SEXP lambdaSEXP, SEXP nBSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP aSEXP, SEXP betaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp2PR(x, z, lambda, nB, nT, n, J, tJ, nDmax, lJ, theta, d, a, beta, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt2PR
double lt2PR(IntegerMatrix& x, NumericMatrix& z, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int nB, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt2PR(SEXP xSEXP, SEXP zSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP nBSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt2PR(x, z, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, nB, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// lgp2PR2D
double lgp2PR2D(IntegerMatrix& x, NumericMatrix& z, NumericVector lambda, int nB, int nT, int n, int J, NumericVector tJ, int nDmax, NumericVector lJ, NumericVector theta, NumericVector d, NumericVector a, NumericVector beta, double eps);
RcppExport SEXP _hlt_lgp2PR2D(SEXP xSEXP, SEXP zSEXP, SEXP lambdaSEXP, SEXP nBSEXP, SEXP nTSEXP, SEXP nSEXP, SEXP JSEXP, SEXP tJSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP thetaSEXP, SEXP dSEXP, SEXP aSEXP, SEXP betaSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lgp2PR2D(x, z, lambda, nB, nT, n, J, tJ, nDmax, lJ, theta, d, a, beta, eps));
    return rcpp_result_gen;
END_RCPP
}
// lt2PR2D
double lt2PR2D(IntegerMatrix& x, NumericMatrix& z, int iter, int burn, double delta, NumericMatrix& post, NumericVector& mean_theta, NumericVector& mean_theta_sq, NumericMatrix& draw, NumericMatrix& draw_theta, NumericVector ix, NumericVector ixe, int npar, int ntheta, int n, int nB, int J, int nDmax, NumericVector lJ, int nT, NumericVector tJ, NumericVector& accept, double eps, bool display_progress);
RcppExport SEXP _hlt_lt2PR2D(SEXP xSEXP, SEXP zSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP deltaSEXP, SEXP postSEXP, SEXP mean_thetaSEXP, SEXP mean_theta_sqSEXP, SEXP drawSEXP, SEXP draw_thetaSEXP, SEXP ixSEXP, SEXP ixeSEXP, SEXP nparSEXP, SEXP nthetaSEXP, SEXP nSEXP, SEXP nBSEXP, SEXP JSEXP, SEXP nDmaxSEXP, SEXP lJSEXP, SEXP nTSEXP, SEXP tJSEXP, SEXP acceptSEXP, SEXP epsSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type post(postSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta(mean_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type mean_theta_sq(mean_theta_sqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw(drawSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type draw_theta(draw_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ix(ixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ixe(ixeSEXP);
    Rcpp::traits::input_parameter< int >::type npar(nparSEXP);
    Rcpp::traits::input_parameter< int >::type ntheta(nthetaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nB(nBSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< int >::type nDmax(nDmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lJ(lJSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tJ(tJSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type accept(acceptSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(lt2PR2D(x, z, iter, burn, delta, post, mean_theta, mean_theta_sq, draw, draw_theta, ix, ixe, npar, ntheta, n, nB, J, nDmax, lJ, nT, tJ, accept, eps, display_progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hlt_abs2", (DL_FUNC) &_hlt_abs2, 1},
    {"_hlt_lgp1PNR", (DL_FUNC) &_hlt_lgp1PNR, 11},
    {"_hlt_lt1PNR", (DL_FUNC) &_hlt_lt1PNR, 22},
    {"_hlt_lgp1PNR2D", (DL_FUNC) &_hlt_lgp1PNR2D, 11},
    {"_hlt_lt1PNR2D", (DL_FUNC) &_hlt_lt1PNR2D, 22},
    {"_hlt_lgp1PR", (DL_FUNC) &_hlt_lgp1PR, 14},
    {"_hlt_lt1PR", (DL_FUNC) &_hlt_lt1PR, 24},
    {"_hlt_lgp1PR2D", (DL_FUNC) &_hlt_lgp1PR2D, 14},
    {"_hlt_lt1PR2D", (DL_FUNC) &_hlt_lt1PR2D, 24},
    {"_hlt_lgp2PNR", (DL_FUNC) &_hlt_lgp2PNR, 12},
    {"_hlt_lt2PNR", (DL_FUNC) &_hlt_lt2PNR, 22},
    {"_hlt_lgp2PNR2D", (DL_FUNC) &_hlt_lgp2PNR2D, 12},
    {"_hlt_lt2PNR2D", (DL_FUNC) &_hlt_lt2PNR2D, 22},
    {"_hlt_lgp2PR", (DL_FUNC) &_hlt_lgp2PR, 15},
    {"_hlt_lt2PR", (DL_FUNC) &_hlt_lt2PR, 24},
    {"_hlt_lgp2PR2D", (DL_FUNC) &_hlt_lgp2PR2D, 15},
    {"_hlt_lt2PR2D", (DL_FUNC) &_hlt_lt2PR2D, 24},
    {NULL, NULL, 0}
};

RcppExport void R_init_hlt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
